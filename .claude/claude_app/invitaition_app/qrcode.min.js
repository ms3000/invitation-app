// Simple QRCode library fallback
(function(global) {
    'use strict';
    
    // QRCode generation using HTML5 Canvas and a simple algorithm
    function QRCode() {}
    
    // Simple QR code generation using Google Charts API as fallback
    QRCode.toCanvas = function(canvas, text, options) {
        return new Promise((resolve, reject) => {
            try {
                options = options || {};
                const size = options.width || 256;
                const margin = options.margin || 1;
                const color = options.color || {};
                const dark = color.dark || '#000000';
                const light = color.light || '#FFFFFF';
                
                // Create QR code using Google Charts API
                const qrUrl = `https://chart.googleapis.com/chart?chs=${size}x${size}&cht=qr&chl=${encodeURIComponent(text)}&choe=UTF-8`;
                
                // Create image and draw to canvas
                const img = new Image();
                img.crossOrigin = 'anonymous';
                
                img.onload = function() {
                    const ctx = canvas.getContext('2d');
                    canvas.width = size;
                    canvas.height = size;
                    
                    // Fill background
                    ctx.fillStyle = light;
                    ctx.fillRect(0, 0, size, size);
                    
                    // Draw QR code image
                    ctx.drawImage(img, 0, 0, size, size);
                    
                    resolve();
                };
                
                img.onerror = function() {
                    // Fallback: Create a simple pattern as placeholder
                    const ctx = canvas.getContext('2d');
                    canvas.width = size;
                    canvas.height = size;
                    
                    // Fill background
                    ctx.fillStyle = light;
                    ctx.fillRect(0, 0, size, size);
                    
                    // Create a simple pattern
                    ctx.fillStyle = dark;
                    const gridSize = Math.floor(size / 20);
                    
                    // Draw border
                    ctx.fillRect(0, 0, size, gridSize);
                    ctx.fillRect(0, size - gridSize, size, gridSize);
                    ctx.fillRect(0, 0, gridSize, size);
                    ctx.fillRect(size - gridSize, 0, gridSize, size);
                    
                    // Draw center pattern
                    const centerStart = Math.floor(size * 0.4);
                    const centerEnd = Math.floor(size * 0.6);
                    ctx.fillRect(centerStart, centerStart, centerEnd - centerStart, centerEnd - centerStart);
                    
                    // Add some grid pattern
                    for (let i = 2; i < 18; i += 3) {
                        for (let j = 2; j < 18; j += 3) {
                            if (Math.random() > 0.3) {
                                ctx.fillRect(i * gridSize, j * gridSize, gridSize, gridSize);
                            }
                        }
                    }
                    
                    // Add text info
                    ctx.fillStyle = dark;
                    ctx.font = '12px Arial';
                    ctx.textAlign = 'center';
                    ctx.fillText('QR Code', size/2, size - 20);
                    ctx.font = '8px Arial';
                    ctx.fillText('(Fallback Mode)', size/2, size - 8);
                    
                    resolve();
                };
                
                img.src = qrUrl;
                
            } catch (error) {
                reject(error);
            }
        });
    };
    
    // Export to global
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = QRCode;
    } else if (typeof define === 'function' && define.amd) {
        define(function() { return QRCode; });
    } else {
        global.QRCode = QRCode;
    }
    
})(typeof window !== 'undefined' ? window : this);

console.log('✅ QRCode 대체 라이브러리 로드 완료');